{"version":3,"file":"static/js/431.c08eb4aa.chunk.js","mappings":"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","sources":["api/fetchApi.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3ed700b5d7b679b57b749969c057aea5';\n\nexport const fetchTrendMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesByName = async name => {\n  return await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesDetail = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesCast = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\nexport const fetchMoviesReviews = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListButton = styled.button`\n  margin-bottom: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const ListH2 = styled.h2`\n  margin-bottom: 5px;\n`;\n\nexport const ListP = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport const ListLink = styled(NavLink)`\n  margin-bottom: 5px;\n\n  :hover {\n    color: red;\n  }\n`;\n","import { ListButton, ListH2, ListP, ListLink } from './MovieDetails.styled';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nexport default function MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n    voteCount,\n  } = movieInfo;\n\n  const back = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <div>\n      <ListButton type=\"button\" onClick={back}>\n        Go back\n      </ListButton>\n\n      <div>\n        <img src={`${imgBaseUrl}${poster}`} alt={title} />\n        <div>\n          <div>\n            <ListH2>{title}</ListH2>\n            <p>{releaseDate}</p>\n          </div>\n          <ul>\n            {genres && genres.map(({ name, id }) => <li key={id}>{name}</li>)}\n          </ul>\n          <ListP>{description}</ListP>\n          <div>\n            <ListP>\n              Vote average: <span>{voteAverage}</span>\n            </ListP>\n            <ListP>\n              Vote count: <span>{voteCount}</span>\n            </ListP>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <ListP>Additional Information</ListP>\n        <ul>\n          <li>\n            <ListLink to=\"cast\" state={{ from: subLocation }}>\n              Cast\n            </ListLink>\n          </li>\n          <li>\n            <ListLink to=\"reviews\" state={{ from: subLocation }}>\n              Reviews\n            </ListLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      }),\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\n\nimport { fetchMoviesDetail } from '../api/fetchApi';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst Cast = lazy(() => import('../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    fetchMoviesDetail(movieId).then(\n      ({\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieInfo = {\n          title: original_title,\n          genres: genres,\n          description: overview,\n          poster: poster_path,\n          releaseDate: release_date,\n          voteAverage: vote_average,\n          voteCount: vote_count,\n        };\n\n        return setMovieInfo(movieInfo);\n      },\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","then","response","data","fetchMoviesByName","name","fetchMoviesDetail","id","fetchMoviesCast","fetchMoviesReviews","ListButton","styled","ListH2","ListP","ListLink","NavLink","MovieDetails","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","voteAverage","voteCount","type","onClick","src","alt","map","to","prototype","propTypes","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","useState","setMovieInfo","useEffect","original_title","overview","poster_path","release_date","vote_average","vote_count","Suspense","fallback","path","element"],"sourceRoot":""}