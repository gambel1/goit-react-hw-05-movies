{"version":3,"file":"static/js/806.204b7626.chunk.js","mappings":"2NAEaA,EAAgBC,EAAAA,EAAAA,GAAH,gDAIbC,EAAsBD,EAAAA,EAAAA,GAAH,2FAMnBE,EAA0BF,EAAAA,EAAAA,EAAH,oLASvBG,EAAoBH,EAAAA,EAAAA,GAAH,+C,uCCXf,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5BC,EAAa,GAEnBD,EAAQE,KAAI,YAA8B,IAClCC,EAAS,CACbC,GAFqC,EAA1BA,GAGXC,OAHqC,EAAtBA,OAIfC,KAJqC,EAAdC,SAOzB,OAAON,EAAWO,KAAKL,MAGzBP,EAAWK,QAEZ,CAACT,IAEGG,GAAWA,EAAQc,OAAS,GACjC,0BACE,SAACvB,EAAD,UACGS,EAAQO,KAAI,YAA2B,IAAxBE,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,2BACE,SAAClB,EAAD,UAAsBiB,KACtB,SAAChB,EAAD,UAA0BiB,MAFnBF,WASjB,0BACE,SAACd,EAAD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListReviewsUl = styled.ul`\n  margin-bottom: 80px;\n`;\n\nexport const ListReviewsAuthorH4 = styled.h4`\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\nexport const ListReviewsDescriptionP = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  text-align: justify;\n  margin-bottom: 10px;\n  line-height: 1.5714285714285714;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nexport const NotFoundReviewsH2 = styled.h2`\n  text-align: center;\n`;\n","import {\n  ListReviewsUl,\n  ListReviewsAuthorH4,\n  ListReviewsDescriptionP,\n  NotFoundReviewsH2,\n} from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from '../../api/fetchApi';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(({ results }) => {\n      const reviewsArr = [];\n\n      results.map(({ id, author, content }) => {\n        const review = {\n          id,\n          author,\n          text: content,\n        };\n\n        return reviewsArr.push(review);\n      });\n\n      setReviews(reviewsArr);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <div>\n      <ListReviewsUl>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <li key={id}>\n              <ListReviewsAuthorH4>{author}</ListReviewsAuthorH4>\n              <ListReviewsDescriptionP>{text}</ListReviewsDescriptionP>\n            </li>\n          );\n        })}\n      </ListReviewsUl>\n    </div>\n  ) : (\n    <div>\n      <NotFoundReviewsH2>\n        We don't have any reviews for this movie.\n      </NotFoundReviewsH2>\n    </div>\n  );\n}\n"],"names":["ListReviewsUl","styled","ListReviewsAuthorH4","ListReviewsDescriptionP","NotFoundReviewsH2","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMoviesReviews","then","results","reviewsArr","map","review","id","author","text","content","push","length"],"sourceRoot":""}