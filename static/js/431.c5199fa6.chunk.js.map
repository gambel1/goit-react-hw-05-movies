{"version":3,"file":"static/js/431.c5199fa6.chunk.js","mappings":"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","sources":["api/fetchApi.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3ed700b5d7b679b57b749969c057aea5';\n\nexport const fetchTrendMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesByName = async name => {\n  return await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesDetail = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesCast = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\nexport const fetchMoviesReviews = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\n\nexport const ListButton = styled(Button)`\n  margin-bottom: 10px;\n`;\n\nexport const ListWrapDiv = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 80px;\n`;\n\nexport const ListH2 = styled.h2`\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\nexport const ListLi = styled.li`\n  display: flex;\n  gap: 10px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const ListTitleGenreH4 = styled.h4`\n  font-size: inherit;\n  font-weight: 600;\n  margin-right: 46px;\n`;\n\nexport const ListTitleGenreP = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.5714285714285714;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nexport const ListDescriptionDiv = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const ListTitleDescriptionH4 = styled.h4`\n  font-size: inherit;\n  font-weight: 600;\n`;\n\nexport const ListDescriptionTitleP = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.5714285714285714;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nexport const ListRatingBoxUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const ListRatingBoxLi = styled.li`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const ListRatingBoxSecondaryLi = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ListRatingTitleH4 = styled.h4`\n  font-size: inherit;\n  font-weight: 600;\n`;\n\nexport const ListRatingP = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.5714285714285714;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nexport const AdditionalListH3 = styled.h3`\n  margin-bottom: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 7px 15px;\n\n  width: fit-content;\n  border-radius: 2px;\n  color: #ffffff;\n  background-color: #2f364a;\n`;\n\nexport const AdditionalListLi = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const ListLink = styled(NavLink)`\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: #000000;\n\n  :hover {\n    color: red;\n  }\n`;\n","import {\n  ListButton,\n  ListWrapDiv,\n  ListH2,\n  ListLi,\n  ListTitleGenreH4,\n  ListTitleGenreP,\n  ListDescriptionDiv,\n  ListTitleDescriptionH4,\n  ListDescriptionTitleP,\n  ListRatingBoxUl,\n  ListRatingBoxLi,\n  ListRatingBoxSecondaryLi,\n  ListRatingTitleH4,\n  ListRatingP,\n  AdditionalListH3,\n  AdditionalListLi,\n  ListLink,\n} from './MovieDetails.styled';\n\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport default function MovieDetails({ movieInfo }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const subLocation = location.state.from;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n    voteCount,\n  } = movieInfo;\n\n  const back = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <div>\n      <ListButton onClick={back}>Go back</ListButton>\n\n      <ListWrapDiv>\n        <img src={`${imgBaseUrl}${poster}`} alt={title} />\n        <div>\n          <div>\n            <ListH2>{title}</ListH2>\n            <Text keyboard>{releaseDate}</Text>\n          </div>\n          <ul>\n            <ListLi>\n              <ListTitleGenreH4 strong>Genre:</ListTitleGenreH4>\n              {genres &&\n                genres.map(({ name, id }) => (\n                  <ListTitleGenreP key={id}>{name}</ListTitleGenreP>\n                ))}\n            </ListLi>\n          </ul>\n          <ListDescriptionDiv>\n            <ListTitleDescriptionH4>Descriptions:</ListTitleDescriptionH4>\n            <ListDescriptionTitleP> {description}</ListDescriptionTitleP>\n          </ListDescriptionDiv>\n          <ListRatingBoxUl>\n            <ListRatingBoxLi>\n              <ListRatingTitleH4>Vote average:</ListRatingTitleH4>\n              <ListRatingP>{voteAverage}</ListRatingP>\n            </ListRatingBoxLi>\n            <ListRatingBoxSecondaryLi>\n              <ListRatingTitleH4>Vote count:</ListRatingTitleH4>\n              <ListRatingP>{voteCount}</ListRatingP>\n            </ListRatingBoxSecondaryLi>\n          </ListRatingBoxUl>\n\n          <div>\n            <AdditionalListH3>Additional Information</AdditionalListH3>\n            <ul>\n              <AdditionalListLi>\n                <ListLink to=\"cast\" state={{ from: subLocation }}>\n                  Cast\n                </ListLink>\n              </AdditionalListLi>\n              <li>\n                <ListLink to=\"reviews\" state={{ from: subLocation }}>\n                  Reviews\n                </ListLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </ListWrapDiv>\n    </div>\n  );\n}\n\nMovieDetails.prototype = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      }),\n    ),\n    description: propTypes.string,\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n    voteAverage: propTypes.number,\n    voteCount: propTypes.number,\n  }),\n};\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Routes, Route } from 'react-router-dom';\n\nimport { fetchMoviesDetail } from '../api/fetchApi';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst Cast = lazy(() => import('../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    fetchMoviesDetail(movieId).then(\n      ({\n        original_title,\n        genres,\n        overview,\n        poster_path,\n        release_date,\n        vote_average,\n        vote_count,\n      }) => {\n        const movieInfo = {\n          title: original_title,\n          genres: genres,\n          description: overview,\n          poster: poster_path,\n          releaseDate: release_date,\n          voteAverage: vote_average,\n          voteCount: vote_count,\n        };\n\n        return setMovieInfo(movieInfo);\n      },\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieDetails movieInfo={movieInfo} />}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","then","response","data","fetchMoviesByName","name","fetchMoviesDetail","id","fetchMoviesCast","fetchMoviesReviews","ListButton","styled","Button","ListWrapDiv","ListH2","ListLi","ListTitleGenreH4","ListTitleGenreP","ListDescriptionDiv","ListTitleDescriptionH4","ListDescriptionTitleP","ListRatingBoxUl","ListRatingBoxLi","ListRatingBoxSecondaryLi","ListRatingTitleH4","ListRatingP","AdditionalListH3","AdditionalListLi","ListLink","NavLink","Text","Typography","MovieDetails","movieInfo","location","useLocation","navigate","useNavigate","subLocation","state","from","title","genres","description","poster","releaseDate","voteAverage","voteCount","onClick","src","alt","keyboard","strong","map","to","prototype","propTypes","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","useState","setMovieInfo","useEffect","original_title","overview","poster_path","release_date","vote_average","vote_count","Suspense","fallback","path","element"],"sourceRoot":""}