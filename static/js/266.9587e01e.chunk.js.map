{"version":3,"file":"static/js/266.9587e01e.chunk.js","mappings":"6SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,8FACjBC,EAAAA,EAAAA,IAAA,UACHH,EADG,uCACoCC,IAC9CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHC,mFAAH,qDAMhBC,EAAiB,mCAAG,WAAMC,GAAN,iFAClBL,EAAAA,EAAAA,IAAA,UACHH,EADG,iCAC8BC,EAD9B,kBAC+CO,IACzDJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHE,mFAAH,sDAMjBG,EAAiB,mCAAG,WAAMC,GAAN,iFAClBP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,oBAC6BT,EAD7B,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHE,mFAAH,sDAMjBK,EAAe,mCAAG,WAAMD,GAAN,iFAChBP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,4BACqCT,IAC/CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHA,mFAAH,sDAKfM,EAAkB,mCAAG,WAAMF,GAAN,iFACnBP,EAAAA,EAAAA,IAAA,UACHH,EADG,kBACeU,EADf,4BACqCT,IAC/CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHG,mFAAH,uD,gFC1BlBO,EAASC,EAAAA,EAAAA,GAAH,gDAINC,EAAQD,EAAAA,EAAAA,EAAH,+CAILE,EAAUF,EAAAA,EAAAA,IAAH,+C,2CCHL,SAASG,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OAC/BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,2BACE,SAACP,EAAD,4BACCK,EAAOG,KAAI,YAAoD,IAAjDX,EAAgD,EAAhDA,GAAIY,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7C,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAahB,GAAMiB,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACJ,EAAD,UAAQO,GAAgB,2BACxB,SAACN,EAAD,CAASa,IAAG,UAZP,oCAYO,OAAkBN,GAAUO,IAAKR,KAC7C,4BACE,UAACP,EAAD,6BACgB,0BAAOS,QAEvB,UAACT,EAAD,0BACa,gCAAQU,sBAWrCR,EAAac,UAAY,CACvBb,OAAQc,IAAAA,QACNA,IAAAA,MAAgB,CACdtB,GAAIsB,IAAAA,OACJV,MAAOU,IAAAA,OACPT,OAAQS,IAAAA,OACRR,YAAaQ,IAAAA,OACbP,UAAWO,IAAAA,UAEbC,a,kHCtCW,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAekB,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,YACRnC,EAAAA,EAAAA,MAAmBE,MAAK,YAAkB,IAAfkC,EAAc,EAAdA,QACnBC,EAAY,GAElBD,EAAQjB,KACN,YAAoE,IAC5DmB,EAAQ,CACZ9B,GAF+D,EAAhEA,GAGCY,MAH+D,EAA5DmB,eAIHlB,OAJ+D,EAA5CmB,YAKnBlB,YAL+D,EAA/BmB,aAMhClB,UAN+D,EAAjBmB,YAShD,OAAOL,EAAUM,KAAKL,MAI1BJ,EAAUG,QAEX,IAGDrB,IACE,0BACE,SAAC,IAAD,CAAcA,OAAQA","sources":["api/fetchApi.js","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3ed700b5d7b679b57b749969c057aea5';\n\nexport const fetchTrendMovies = async () => {\n  return await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesByName = async name => {\n  return await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesDetail = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n};\n\nexport const fetchMoviesCast = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\nexport const fetchMoviesReviews = async id => {\n  return await axios\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n","import styled from '@emotion/styled';\n\nexport const ListH1 = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const ListP = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport const ListImg = styled.img`\n  margin-bottom: 5px;\n`;\n","import { ListH1 } from './TrendingList.styled';\nimport { ListP, ListImg } from './TrendingList.styled';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function TrendingList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      <ListH1>Trending list</ListH1>\n      {movies.map(({ id, title, poster, voteAverage, voteCount }) => {\n        return (\n          <li>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ListP>{title ? title : 'Movie without a title'}</ListP>\n              <ListImg src={`${imgBaseUrl}${poster}`} alt={title} />\n              <div>\n                <ListP>\n                  Vote average: <span>{voteAverage}</span>\n                </ListP>\n                <ListP>\n                  Vote count:<span> {voteCount}</span>\n                </ListP>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nTrendingList.prototype = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    }),\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from '../api/fetchApi';\n\nimport TrendingList from '../components/TrendingList/TrendingList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrendMovies().then(({ results }) => {\n      const moviesArr = [];\n\n      results.map(\n        ({ id, original_title, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: original_title,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        },\n      );\n\n      setMovies(moviesArr);\n    });\n  }, []);\n\n  return (\n    movies && (\n      <div>\n        <TrendingList movies={movies} />\n      </div>\n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","then","response","data","fetchMoviesByName","name","fetchMoviesDetail","id","fetchMoviesCast","fetchMoviesReviews","ListH1","styled","ListP","ListImg","TrendingList","movies","location","useLocation","map","title","poster","voteAverage","voteCount","to","state","from","src","alt","prototype","propTypes","isRequired","HomePage","useState","setMovies","useEffect","results","moviesArr","movie","original_title","poster_path","vote_average","vote_count","push"],"sourceRoot":""}